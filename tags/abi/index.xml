<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ABI on 铁叔</title><link>https://www.tiege.dev/tags/abi/</link><description>Recent content in ABI on 铁叔</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 04 Sep 2021 13:43:50 +0000</lastBuildDate><atom:link href="https://www.tiege.dev/tags/abi/index.xml" rel="self" type="application/rss+xml"/><item><title>solidity函数selector的计算</title><link>https://www.tiege.dev/post/evm-selector/</link><pubDate>Sat, 04 Sep 2021 13:43:50 +0000</pubDate><guid>https://www.tiege.dev/post/evm-selector/</guid><description>&lt;p>solidity 中有函数选择器(selector)的概念.&lt;/p>
&lt;h2 id="什么是-selector">什么是 selector&lt;/h2>
&lt;p>在 solidity 中，所有 public (或 external) 函数有一个特殊的成员selector, 它对应一个ABI 函数选择器。&lt;/p>
&lt;p>evm 函数选择器是一个函数调用数据的前 4 字节，指定了要调用的函数。这就是某个函数签名的 Keccak 哈希的前 4 字节(高位在左的大端序) (译注：这里的 &lt;code>高位在左的大端序&lt;/code>，指最高位字节存储在最低位地址上的一种串行化编码方式，即高位字节在左)。 这种签名被定义为基础原型的规范表达，基础原型即是函数名称加上由括号括起来的参数类型列表，参数类型间由一个逗号分隔开，且没有空格。&lt;/p>
&lt;p>简单来说，就是函数原型的 sha-3 hash值。&lt;/p></description></item></channel></rss>